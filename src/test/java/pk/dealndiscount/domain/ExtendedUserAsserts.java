package pk.dealndiscount.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ExtendedUserAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExtendedUserAllPropertiesEquals(ExtendedUser expected, ExtendedUser actual) {
        assertExtendedUserAutoGeneratedPropertiesEquals(expected, actual);
        assertExtendedUserAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExtendedUserAllUpdatablePropertiesEquals(ExtendedUser expected, ExtendedUser actual) {
        assertExtendedUserUpdatableFieldsEquals(expected, actual);
        assertExtendedUserUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExtendedUserAutoGeneratedPropertiesEquals(ExtendedUser expected, ExtendedUser actual) {
        assertThat(expected)
            .as("Verify ExtendedUser auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExtendedUserUpdatableFieldsEquals(ExtendedUser expected, ExtendedUser actual) {
        assertThat(expected)
            .as("Verify ExtendedUser relevant properties")
            .satisfies(e -> assertThat(e.getDob()).as("check dob").isEqualTo(actual.getDob()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertExtendedUserUpdatableRelationshipsEquals(ExtendedUser expected, ExtendedUser actual) {
        assertThat(expected)
            .as("Verify ExtendedUser relationships")
            .satisfies(e -> assertThat(e.getCity()).as("check city").isEqualTo(actual.getCity()));
    }
}
