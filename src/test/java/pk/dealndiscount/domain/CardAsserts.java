package pk.dealndiscount.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CardAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCardAllPropertiesEquals(Card expected, Card actual) {
        assertCardAutoGeneratedPropertiesEquals(expected, actual);
        assertCardAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCardAllUpdatablePropertiesEquals(Card expected, Card actual) {
        assertCardUpdatableFieldsEquals(expected, actual);
        assertCardUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCardAutoGeneratedPropertiesEquals(Card expected, Card actual) {
        assertThat(expected)
            .as("Verify Card auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCardUpdatableFieldsEquals(Card expected, Card actual) {
        assertThat(expected)
            .as("Verify Card relevant properties")
            .satisfies(e -> assertThat(e.getCardName()).as("check cardName").isEqualTo(actual.getCardName()))
            .satisfies(e -> assertThat(e.getCategory()).as("check category").isEqualTo(actual.getCategory()))
            .satisfies(e -> assertThat(e.getCardNetwork()).as("check cardNetwork").isEqualTo(actual.getCardNetwork()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCardUpdatableRelationshipsEquals(Card expected, Card actual) {
        assertThat(expected)
            .as("Verify Card relationships")
            .satisfies(e -> assertThat(e.getBank()).as("check bank").isEqualTo(actual.getBank()));
    }
}
